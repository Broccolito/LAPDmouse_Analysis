"\n"
cat("\n")
library(listviewer)
#Glue string vector together as one string
glue = function(string, collapse = ""){
if(length(string) <= 1){
return(string)
}else{
res = character()
for(s in string){
res = paste(res, s, collapse = collapse)
}
return(res)
}
}
get_gender = function(md_file){
a = unlist(strsplit(md_file, "Gender:"))[2]
a = unlist(strsplit(a, "Strain"))[1]
a = unlist(strsplit(a, "[*]"))[1]
a = gsub("[[:space:]]", "", a)
return(a)
}
get_particle_size = function(md_file){
a = unlist(strsplit(md_file, "Particle size:"))[2]
a = unlist(strsplit(a, "micron"))[1]
a = gsub("[[:space:]]", "", a)
try({
a = as.numeric(a)
})
cat("Unit: Microns \n")
return(a)
}
get_exposure_time = function(md_file){
a = unlist(strsplit(md_file, "Exposure time:"))[2]
a = unlist(strsplit(a, "minutes"))[1]
a = gsub("[[:space:]]", "", a)
try({
a = as.numeric(a)
})
cat("Unit: Minutes \n")
return(a)
}
get_voxel_size = function(md_file){
a = unlist(strsplit(md_file, "Voxel size:"))[2]
a = unlist(strsplit(a, "[(microns)]"))[1]
a = gsub("[[:space:]]", "", a)
a = unlist(strsplit(a, "x"))
a = as.numeric(a)
cat("Unit: Microns \n")
return(a)
}
get_overall_quality = function(md_file){
a = unlist(strsplit(md_file, "Overall quality:"))[2]
a = unlist(strsplit(a, "[*]"))[1]
a = gsub("[[:space:]]", "", a)
return(a)
}
get_total_centerline_length = function(md_file){
a = unlist(strsplit(md_file, "Total centerline length:"))[2]
a = unlist(strsplit(a, "mm"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
cat("Unit: mm \n")
return(a)
}
get_number_of_branches = function(md_file){
a = unlist(strsplit(md_file, "Number of branches:"))[2]
a = unlist(strsplit(a, "Number"))[1]
a = unlist(strsplit(a, "[*]"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
return(a)
}
get_number_of_terminal_branches = function(md_file){
a = unlist(strsplit(md_file, "Number of terminal branches:"))[2]
a = unlist(strsplit(a, "Maximum"))[1]
a = unlist(strsplit(a, "[*]"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
return(a)
}
get_maximum_generation_number = function(md_file){
a = unlist(strsplit(md_file, "Maximum generation number:"))[2]
a = unlist(strsplit(a, "Number"))[1]
a = unlist(strsplit(a, "[*]"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
return(a)
}
get_number_of_outlet_areas = function(md_file){
a = unlist(strsplit(md_file, "Number of outlet areas:"))[2]
a = unlist(strsplit(a, "[#]"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
return(a)
}
get_lung_volume = function(md_file){
a = unlist(strsplit(md_file, "Lung volume:"))[2]
a = unlist(strsplit(a, "[(mm^3)]"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
cat("Unit: (mm^3) \n")
return(a)
}
get_total_aerosol_deposition = function(md_file){
a = unlist(strsplit(md_file, "Total aerosol deposition:"))[2]
a = unlist(strsplit(a, "Compartments"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
cat("Unit: FMS \n")
return(a)
}
get_relative_exposure_estimate = function(md_file){
a = unlist(strsplit(md_file, "Relative exposure estimate:"))[2]
a = unlist(strsplit(a, "FMS"))[1]
a = gsub("[[:space:]]", "", a)
a = as.numeric(a)
return(a)
}
#Set the wd to where md files are stored
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
setwd(get_directory())
filelist = list.files(pattern = "txt")
file_name = character()
n = 1
for(i in filelist){
file_name[n] = unlist(strsplit(i, "_"))[1]
n = n + 1
}
n = 1
for(f in filelist){
md_file = readLines(f)
md_file = glue(md_file)
l = list(
"filename" = f,
"gender" = get_gender(md_file = md_file),
"particle_size" = get_particle_size(md_file = md_file),
"exposure_time" = get_exposure_time(md_file = md_file),
"voxel_size" = get_voxel_size(md_file = md_file),
"overall_quality" = get_overall_quality(md_file = md_file),
"total_centerline_length" = get_total_centerline_length(md_file = md_file),
"number_of_branches" = get_number_of_branches(md_file = md_file),
"number_of_terminal_branches" = get_number_of_terminal_branches(md_file = md_file),
"maximum_generation_number" = get_maximum_generation_number(md_file = md_file),
"number_of_outlet_areas" = get_number_of_outlet_areas(md_file = md_file),
"lung_volume" = get_lung_volume(md_file = md_file),
"total_aerosol_deposition" = get_total_aerosol_deposition(md_file = md_file),
"relative_exposure_estimate" = get_relative_exposure_estimate(md_file = md_file)
)
assign(file_name[n], l)
n = n + 1
}
rm(l,i,n,f,md_file, file_name,filelist)
# get_gender(md_file = md_file)
# get_particle_size(md_file = md_file)
# get_exposure_time(md_file = md_file)
# get_voxel_size(md_file = md_file)
# get_overall_quality(md_file = md_file)
# get_total_centerline_length(md_file = md_file)
# get_number_of_branches(md_file = md_file)
# get_number_of_terminal_branches(md_file = md_file)
# get_maximum_generation_number(md_file = md_file)
# get_number_of_outlet_areas(md_file = md_file)
# get_lung_volume(md_file = md_file)
# get_total_aerosol_deposition(md_file = md_file)
# get_relative_exposure_estimate(md_file = md_file)
#Example of viewing a json file
jsonedit(m16)
q
q()
