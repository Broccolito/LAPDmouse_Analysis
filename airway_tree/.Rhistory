args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + data$length * data$directionX, data$centroidX - data$length * data$directionX),
c(data$centroidY + data$length * data$directionY, data$centroidY - data$length * data$directionY),
c(data$centroidZ + data$length * data$directionZ, data$centroidZ - data$length * data$directionZ)),
radius = data$radius
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + data$length * data$directionX, data$centroidX - data$length * data$directionX),
c(data$centroidY + data$length * data$directionY, data$centroidY - data$length * data$directionY),
c(data$centroidZ + data$length * data$directionZ, data$centroidZ - data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.95
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX, data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY, data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ, data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.80
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX, data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY, data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ, data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.70
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX, data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY, data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ, data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.5
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX,
data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY,
data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ,
data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(airway), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.5
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX,
data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY,
data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ,
data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(subdivision3d(airway, depth = 0), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
correction = 0.5
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + correction * data$length * data$directionX,
data$centroidX - correction * data$length * data$directionX),
c(data$centroidY + correction * data$length * data$directionY,
data$centroidY - correction * data$length * data$directionY),
c(data$centroidZ + correction * data$length * data$directionZ,
data$centroidZ - correction * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + 0.5 * data$length * data$directionX,
data$centroidX - 0.5 * data$length * data$directionX),
c(data$centroidY + 0.5 * data$length * data$directionY,
data$centroidY - 0.5 * data$length * data$directionY),
c(data$centroidZ + 0.5 * data$length * data$directionZ,
data$centroidZ - 0.5 * data$length * data$directionZ)),
radius = data$radius,
sides = 100
)
shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + 0.5 * data$length * data$directionX,
data$centroidX - 0.5 * data$length * data$directionX),
c(data$centroidY + 0.5 * data$length * data$directionY,
data$centroidY - 0.5 * data$length * data$directionY),
c(data$centroidZ + 0.5 * data$length * data$directionZ,
data$centroidZ - 0.5 * data$length * data$directionZ)),
radius = data$radius,
)
shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + 0.5 * data$length * data$directionX,
data$centroidX - 0.5 * data$length * data$directionX),
c(data$centroidY + 0.5 * data$length * data$directionY,
data$centroidY - 0.5 * data$length * data$directionY),
c(data$centroidZ + 0.5 * data$length * data$directionZ,
data$centroidZ - 0.5 * data$length * data$directionZ)),
radius = data$radius,
closed = TRUE
)
shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
if(!require("rgl")){
install.packages("rgl")
library("rgl")
}
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
wd = get_directory()
setwd(wd)
#Read the data
airway_data = read.csv(file = "m01_AirwayTreeTable.csv")
data_dimension = dim(airway_data)[1]
try({
rgl.close()
}, silent = TRUE)
open3d()
for(i in 1:data_dimension){
data = airway_data[i,]
airway = cylinder3d(
center = cbind(c(data$centroidX + 0.5 * data$length * data$directionX,
data$centroidX - 0.5 * data$length * data$directionX),
c(data$centroidY + 0.5 * data$length * data$directionY,
data$centroidY - 0.5 * data$length * data$directionY),
c(data$centroidZ + 0.5 * data$length * data$directionZ,
data$centroidZ - 0.5 * data$length * data$directionZ)),
radius = data$radius
)
shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
#shade3d(addNormals(subdivision3d(airway, depth = 0)), col = rainbow(data_dimension)[i])
}
