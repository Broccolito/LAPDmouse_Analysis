}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
save(dimen_mat, "dimen_mat.rds")
dimen_mat
save(dimen_mat, "m.rds")
?save
rm(list = ls())
graphics.off()
library(readxl)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
save(dimen_mat, file = "dimen_mat.rds")
rm(list = ls())
graphics.off()
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
setwd(wd)
fl = list.files(pattern = "rds")
fl = fl[fl != "dimen_mat.rds"]
for(i in fl){
load(i)
i = unlist(strsplit(i, "[.]"))[1]
assign(i, f)
}
intercept = vector()
for(i in ls(pattern = "_mat")){
mat = get(i)
intercept_x = mat[,3]/(1-mat[,1])
intercept = rbind(intercept, intercept_x)
}
intercept = as.matrix(intercept)
row.names(intercept) = rep(NULL, dim(intercept)[1])
load("dimen_mat.rds")
dimen_mat
m1_mat
intercept
rm(list = ls())
graphics.off()
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
setwd(wd)
fl = list.files(pattern = "rds")
fl = fl[fl != "dimen_mat.rds"]
for(i in fl){
load(i)
i = unlist(strsplit(i, "[.]"))[1]
assign(i, f)
}
intercept = vector()
for(i in ls(pattern = "_mat")){
mat = get(i)
intercept_x = mat[,3]/(1-mat[,1])
intercept = rbind(intercept, intercept_x)
}
intercept = as.matrix(intercept)
row.names(intercept) = rep(NULL, dim(intercept)[1])
load("dimen_mat.rds")
intercept * dimen_mat
mat
rm(list = ls())
graphics.off()
library(readxl)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
#save(dimen_mat, file = "dimen_mat.rds")
rm(list = ls())
graphics.off()
library(readxl)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
#save(dimen_mat, file = "dimen_mat.rds")
dimen_mat
View(dimen_mat)
rm(list = ls())
graphics.off()
library(ggplot2)
library(Hmisc)
library(knitr)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
compare_ratio = function(file_list){
regression_summary_mat = vector()
for(filename in file_list){
filename = unlist(strsplit(filename, "[.]"))[1]
data = read.csv(paste0(filename, ".csv"))
total_volume = sum(data$volume)
particle_count = data$volume * data$mean
total_particle_count = sum(particle_count)
particle_total_volume_ratio = particle_count/total_particle_count
volume_total_volume_ratio = data$volume/total_volume
#Do a linear regression and return the coef
l = lm(particle_total_volume_ratio ~ volume_total_volume_ratio)
l = summary(l)
l_coef = l$coefficients[2,1]
l_coef_std = l$coefficients[2,2]
l_intercept = l$coefficients[1,1]
l_intercept_std = l$coefficients[1,2]
l_rsq = l$r.squared
l_rsq_adj = l$adj.r.squared
regression_summary = c(l_coef, l_coef_std, l_intercept, l_intercept_std, l_rsq, l_rsq_adj)
names(regression_summary) = c("coef", "coef_std", "intercept", "intercept_std", "rsq", "rsq_adj")
regression_summary_mat = rbind(regression_summary_mat, regression_summary)
##### Disable the plotting device
# print(filename)
# print(l)
# if(window_graphic){
#   windows(width = 1920, height = 1080)
# }
#Convert to data frame
# ratio_data_frame = data.frame(particle_total_volume_ratio,
#                               volume_total_volume_ratio)
#Plot using ggplot
# ggplot(data = ratio_data_frame, aes(x = ratio_data_frame$particle_total_volume_ratio,
#                                     y = volume_total_volume_ratio)) +
#   xlab("particle total volume ratio") +
#   ylab("volume total volume ratio") +
#
#   ggtitle(filename, subtitle = "Blue: Linear Regression Line;  Black: Line Y = X") +
#   geom_point() +
#   stat_summary(fun.data=mean_cl_normal) +
#   geom_smooth(method='lm',formula= y~x ) +
#   geom_abline(intercept = 0, slope = 1, color="black",
#               linetype="dashed", size = 1) +
#   theme_minimal()
#
# ggsave(filename = paste0(filename, ".png"), device = "png")
# Sys.sleep(1)
}
row.names(regression_summary_mat) = c("LobesDeposition", "NearAciniDeposition", "SublobesDeposition")
return(regression_summary_mat)
}
wd = get_directory()
setwd(wd)
wd = paste0(wd, "/CSV_Data")
setwd(wd)
file.remove(list.files(pattern = "rds")) #Make sure there is no rds files in the directory
dir_list = list.files(pattern = "m")
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
#Compare the scatterness of the ratio
assign(paste0(d, "_mat"), compare_ratio(file_list = file_list))
setwd(wd)
}
#####Save all the regression results
mat_list = ls(pattern = "_mat")
for(file_name in mat_list){
f = get(file_name)
save(f, file = paste0(file_name, ".rds"))
}
#####Print all the outcomes
for(file_name in mat_list){
cat(file_name)
cat("\n")
print(kable(get(file_name)))
cat("\n")
cat("\n")
}
rm(list = ls())
graphics.off()
library(readxl)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
#save(dimen_mat, file = "dimen_mat.rds")
#dimen_mat
getwd9
getwd()
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
rm(list = ls())
graphics.off()
library(readxl)
get_directory = function(){
args <- commandArgs(trailingOnly = FALSE)
file <- "--file="
rstudio <- "RStudio"
match <- grep(rstudio, args)
if(length(match) > 0){
return(dirname(rstudioapi::getSourceEditorContext()$path))
}else{
match <- grep(file, args)
if (length(match) > 0) {
return(dirname(normalizePath(sub(file, "", args[match]))))
}else{
return(dirname(normalizePath(sys.frames()[[1]]$ofile)))
}
}
}
getinto = function(filename){
if(!dir.exists(filename)){
print("The file is not found...")
stop("Wrong directory...")
}else{
setwd(paste(getwd(),"/",filename,sep = ""))
}
}
wd = get_directory()
wd = paste0(wd, "/CSV_Data")
setwd(wd)
dir_list = list.files(pattern = "m")
dimen_mat = vector()
for(d in dir_list){
getinto(d)
file_list = list.files(pattern = "Deposition")
file_list = file_list[!grepl("Airway", file_list)]
dimen_vec = vector()
for(f in file_list){
data = read.csv(f)
dimen = dim(data)[1]
dimen_vec = c(dimen_vec, dimen)
}
names(dimen_vec) = file_list
setwd(wd)
dimen_mat = rbind(dimen_mat, dimen_vec)
}
row.names(dimen_mat) = rep(NULL, dim(dimen_mat)[1])
colnames(dimen_mat) = c("lobe", "acini", "sublobes")
#save(dimen_mat, file = "dimen_mat.rds")
#dimen_mat
dimen_mat
ls(pattern = "mat")
View(dimen_mat)
rm(list = ls)
rm(list = ls())
q()
